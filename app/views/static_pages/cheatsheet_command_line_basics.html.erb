<div class="row-fluid">
  <div class="cheat-sheets span12">   
    <div class="span6">
      <h2>Dummy Copy - Illustration to come</h2>
      <div class="git-map git-one"></div>
    </div> <!-- //end span6  -->
    
    <div class="span6 red-bkgrnd" id="opacity-90">
      <h5>CHEATSHEET:</h5>
      <h2>COMMAND LINE BASICS</h2>
      <div class="accordion" id="accordion2">
        <div class="accordion-group">
          <div class="accordion-heading">
            <a class="accordion-toggle" data-toggle="collapse" data=parent="#accordion2" href="#collapseOne">
              What is the Command Line? 
            </a> 
          </div> <!-- //end accordion-heading    -->
          
          <div id="collapseOne" class="accordion-body collapse">
            <div class="accordion-inner">
              <p class = italics>
                Many of us are used to using GUIS ( Graphical User Interfaces ), but learning how to use the 
                CLI ( Command Line Interface ), is essential for programming.  Common names include the Shell, CLI,
                 Terminal and Console. But exactly what is the Command Line? At it’s core, it’s simply the place 
                 where you type commands to the computer. 
                <a href="http://en.wikipedia.org/wiki/Command-line_interface">Wikipedia</a> defines the Terminal this way:
              </p>
              <p>
                “A command-line interface (CLI) is a means of interaction with a computer program where the user 
                (or client) issues commands to the program in the form of successive lines of text (command lines). 
                A command-line interface is one type of text-based user interface.”
              </p>  
              <p>
                On a Mac, launch the Terminal from the utilities folder inside of your main Applications folder.
                Apple Mac OS X[4] and many Linux distributions have the Bash implementation of the Unix shell.
              </p>
              <p>
                On MS Windows users use the Command Prompt or the PowerShell. Android uses a Unix shell derived 
                from Ash with commands from the separate toolbox.
              </p>
              <p>We will be concerning ourselves with the Mac side of things.</p>
            </div>
          </div> <!-- //end collapseOne -->
        </div> <!-- //end accordion-group   -->
        
        <div class="accordion-group">
          <div class="accordion-heading">
            <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapseTwo">
              The syntax of the Command Line
            </a>
          </div>
          <div id="collapseTwo" class="accordion-body collapse">
            <div class="accordion-inner">
              <p>
                Most commands have three parts and start with the $ symbol.<br>
                The Utility or Command Name / The Flags or Options / The Arguments <br>
              </p>
              <div class="coding">
                <h6 class="steps">$ ls -1 ~/Desktop</h6>
              </div>
              <p><span class="strong em">$</span> is the common symbol which indicates that you’re typing a 
                command into the command line, you don’t have to type this, it’s inherited with the prompt.
              </p>
              <p><span class="strong em">ls</span> is the utility but are genrally know as “commands” as they 
                are indicating what you want the computer to do. In this case “ls” is the command to list the contents 
                of directories.
              </p>
              <p><span class="strong em">-1</span> is the flag or option, that changes or alters how a utility may 
                operate slightly. Usually the default works just fine, but flags allow you to modify them to your liking. 
                They start with one or two dashes. In this case, “-1” means one file per line.
              </p>
              <p><span class="strong em">~/Desktop</span> is the argument to the utility. Arguments are used to define 
                exactly what the utility might need to know exactly what you want to for certain actions, and there is no 
                clear default setting. In this case, the listing of this directory, tells the utility 
                which directory to list.
              </p>
              <p>
                To get a list of all commands, type this:<br>
              </p>
              <div class="coding">
                <h6 class="steps">$ man command</h6>
              </div>
              <p>Man means manual, fyi.</p>  
            </div>
          </div> <!-- //end collapseTwo -->   
        </div> <!-- //end accordion-group   -->       
        
        <div class="accordion-group">
          <div class="accordion-heading">
            <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion3" href="#collapseThree">
              Most Common Commands
            </a>
          </div>
          <div id="collapseThree" class="accordion-body collapse">
            <div class="accordion-inner">
              <p>
                Remember guys, you konw you're ready to go, when you see the '$' which means you're in your
                terminal and ready to code. <br>
              </p>
              <p><span class="strong em">ls</span> Lists what is in the current directory</p>
              <p><span class="strong em">pwd</span> Print Working Directory, gives you the full path of where your</p>
              <p><span class="strong em">cd</span> Change Directory, allows you to go to another directory, remember you have to
                define this utility with a path, for instance cd ~/my_machine/new_path</p>
              <p><span class="strong em">cd ..</span> Change Directory, but you want to go up a directory vs. down a directory</p>
              <p><span class="strong em">pwd</span> Print Working Directory, gives you the full path of where your</p>
              <p><span class="strong em">irb</span> Interactive Ruby, which you have to have installed. Now watch for the prompt! 
                When launching the irb, the prompt will change from '$' to '>'. That means you have to exit irb with control D, to 
                get back to the former context.</p>
              <p><span class="strong em">mkdir</span> Make Directory, allows you to make a folder from the command line</p>
              <p><span class="strong em">rails new app_name</span> Rails New Application Name, after you've installed Rails, 
                this command will create the entire directory structure of a rails application. RAILS is the Gem, App_Name is the 
                new application, that you'll be naming.
              </p>
              <p><span class="strong em">rails server or rails s</span> Rails Server which launches a local server, you then open
                a window and type: localhost:3000 and bam you've got a local version of your work</p>
              <p><span class="strong em">exit</span> Exit a terminal window</p>
              <p><span class="strong em">man -k "topic"</span>Manual Lookup Topic, looks up and displays what you're 
                looking for in quotes
              </p>
              </div>
            </div> <!-- //end collapseThree -->  
          </div> <!-- //end accordion-group   --> 
          <div class="accordion-group">
          <div class="accordion-heading">
            <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion3" href="#collapseFive">
              More Online Resources
            </a>
          </div>
          <div id="collapseFive" class="accordion-body collapse">
            <div class="accordion-inner">
              <p>
              <a href="0http://ss64.com/">ss64.com</a> is a great place to visit. 
              </p>
              <p>
              The source is known os the Branch Master and with a series of Git commands, a user will periodically update or "Git Pull" to retrieve new updates
              from the remote repository, then continue working locally and send or "Git Push" new changes or "Commits" to contribute to shared repositories.
              </p>
            </div>
          </div> <!-- //end collapseFive -->
        </div> <!-- //end accordion-group   --> 
      </div> <!-- //end accordion2 -->
      
      <div class="btn-group dropup">
        <button class="btn">Next Cheatsheet</button>
        <button class="btn dropdown-toggle" data-toggle="dropdown">
          <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
          <li><%= link_to "Command Line Basics", cheatsheet_command_line_basics_path %></li>
          <li><%= link_to "All About Git", cheat_path %></li>
          <li><%= link_to "How to Install Git", cheatsheet_install_git_path %></li>
          <li><%= link_to "How to Create a Git Repository", cheatsheet_repository_path %></li>
          <li><%= link_to "How to Clone a Git Repository", cheatsheet_clone_a_repository_path %></li>
          <li><%= link_to "Create and Merge Git Branches", cheatsheet_merge_a_repository_path %></li>
          <li><%= link_to "How to Rollback a Git Repository", cheatsheet_rollback_a_repository_path %></li>
          <li><%= link_to "Deploying to Heroku", cheatsheet_deploying_to_heroku_path %></li>
          <li><%= link_to "RVM: Ruby Version Control", cheatsheet_rvm_ruby_version_control_path %></li>
          <li><%= link_to "Basic Ruby", cheatsheet_basic_ruby_path %></li>
          <li><%= link_to "Scaffolding Basics", cheatsheet_scaffolding_path %></li>
          <li><%= link_to "Overview of Basic Testing", cheatsheet_basic_overview_of_testing_path %></li>
        </ul>
      </div> <!-- //btn-group dropup  -->
      
      <!-- social networks -->
      <div class="canvas">
        <%= link_to "", "https://twitter.com/railsbridge", :id => "twitter", :target => "_blank" %>
        <%= link_to "", "https://github.com/railsbridge", :id => "github", :target => "_blank" %>
      </div>
    </div> <!-- //span5 red-bkgrnd   -->
  </div> <!-- // end cheat-sheets span11   -->
</div> <!-- //end row-fluid -->
